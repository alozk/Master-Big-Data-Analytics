# Copyright 2021 Ignacio Asin (iasinDev)
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#    http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

on:
  push:
    branches:
    - main
  pull_request:    
  workflow_dispatch:  

name: Build, Check and Deploy to Cloud Run on GCP
env:
  PROJECT_ID: ${{ secrets.GCP_PROJECT }}
  SERVICE: ${{ secrets.SERVICE_NAME }}
  REGION: ${{ secrets.GCP_REGION }}
  ZONE: ${{ secrets.GCP_ZONE }}

jobs:

  build-and-push-container-image:

    runs-on: ubuntu-latest

    steps:

    - name: Enable GitHub Actions
      uses: actions/checkout@v2

    - name: Setup Cloud SDK
      uses: google-github-actions/setup-gcloud@v0.2.0
      with:
        project_id: ${{ env.PROJECT_ID }}
        service_account_key: ${{ secrets.GCP_SA_KEY }}

    - name: Check GCP account details
      run: gcloud config list       

    - name: Authorize Docker push
      run: gcloud auth configure-docker

    - name: Build and Push Container
      run: |-
        docker build -t gcr.io/${{ env.PROJECT_ID }}/${{ env.SERVICE }}:${{  github.sha }} .
        docker push gcr.io/${{ env.PROJECT_ID }}/${{ env.SERVICE }}:${{  github.sha }}      
        docker build -t gcr.io/${{ env.PROJECT_ID }}/${{ env.SERVICE }}:latest .  
        docker push gcr.io/${{ env.PROJECT_ID }}/${{ env.SERVICE }}:latest        

  check-terraform-security:

    needs: build-and-push-container-image     

    runs-on: ubuntu-latest

    steps:

    - name: Enable GitHub Actions
      uses: actions/checkout@master

    - name: tfsec
      uses: tfsec/tfsec-sarif-action@master
      with:
        sarif_file: tfsec.sarif           

  deploy-in-cloud-run:

    needs: check-terraform-security

    runs-on: ubuntu-latest

    steps:

    - name: Enable GitHub Actions
      uses: actions/checkout@v2

    # Install the latest version of Terraform CLI and configure the Terraform CLI configuration file with a Terraform Cloud user API token
    - name: Setup Terraform
      uses: hashicorp/setup-terraform@v1

    # Initialize a new or existing Terraform working directory by creating initial files, loading any remote state, downloading modules, etc.
    - name: Terraform Init
      run: terraform init
      env:
        GOOGLE_CREDENTIALS: ${{ secrets.GCP_SA_KEY }}
        TF_VAR_project_id: ${{ env.PROJECT_ID }}
        TF_VAR_region: ${{ env.REGION }}
        TF_VAR_zone: ${{ secrets.GCP_ZONE }}

    # Generates an execution plan for Terraform
    - name: Terraform Plan
      run: terraform plan
      env:
        GOOGLE_CREDENTIALS: ${{ secrets.GCP_SA_KEY }}
        TF_VAR_project_id: ${{ env.PROJECT_ID }}
        TF_VAR_region: ${{ env.REGION }}
        TF_VAR_zone: ${{ env.ZONE }}
        TF_VAR_service: ${{ env.SERVICE }}

    # Apply the execution plan
    - name: Terraform Apply
      if: github.ref == 'refs/heads/main'
      run: terraform apply -auto-approve
      env:
        GOOGLE_CREDENTIALS: ${{ secrets.GCP_SA_KEY }}
        TF_VAR_project_id: ${{ env.PROJECT_ID }}
        TF_VAR_region: ${{ env.REGION }}
        TF_VAR_zone: ${{ env.ZONE }}
        TF_VAR_service: ${{ env.SERVICE }}